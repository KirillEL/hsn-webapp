version: '3.7'

services:

  nginx_local_dev_proxy:
    container_name: nginx-local-dev-proxy
    image: nginx:1.21.3
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      - ".nginx/nginx.conf:/etc/nginx/nginx.conf"
    command: [nginx-debug ,"-g", "daemon off;"]
    networks:
      - hsn_network    


  hsn_api:
    build:
      context: .
      dockerfile: hsn-api/.docker/api/Dockerfile
    container_name: hsn_api
    hostname: hsn_api
    command: /bin/sh -c "cd hsn-api/ && uvicorn api.api_server:app --host 0.0.0.0 --port 9999 --reload"
    tty: true
    restart: on-failure
    ports:
      - "9999:9999"
    environment:
      DEBUG: '${DEBUG}'
    networks:
      - hsn_network
    depends_on:
      - database
    volumes:
      - '.:/app'
      - './hsn-api/logs:/app/logs'


  frontend:
    build:
      context: .
      dockerfile: registr-front/Dockerfile 
    container_name: frontend
    hostname: frontend
    ports:
      - "3000:3000"
    restart: always
    networks:
      - hsn_network
    depends_on:
      - hsn_api


  database:
    image: postgres
    container_name: database
    hostname: database
    tty: true
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_DB: '${DB_NAME}'
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: always
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 3s
      retries: 40
    networks:
      - hsn_network

  pgadmin:
    container_name: local_pgadmin
    image: dpage/pgadmin4:6.19
    depends_on:
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - hsn_network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis_service
    ports:
      - "6380:6379"
    restart: always
    networks:
      - hsn_network

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - "--config.file=/etc/prometheus/prometheus.yml"
#    ports:
#      - "9090:9090"
#    networks:
#      - hsn_network

#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3001:3000"
#    depends_on:
#      - prometheus
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    networks:
#      - hsn_network

networks:
  hsn_network:
    driver: bridge

volumes:
  db-data:
    name: db-data
  pgadmin-data:
    name: pgadmin-data
